{"version":3,"file":"static/js/530.9ac35d6a.chunk.js","mappings":"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","sources":["Api.js","pages/MovieDetails/MoviesDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'a24504acc04e1862bdc8e18566b301b1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Box = styled.main`\n   padding: 40px;\n`;\n\nexport const FilmCard = styled.div`\n  display: flex;\n  padding-bottom: 40px;\n  border-bottom: 3px solid red;\n  margin-top: 40px;\n`; \n\nexport const Img = styled.img`\n  margin-right: 30px;\n`;\n\nexport const MainTitle = styled.h2`\n   font-size: 34px;\n`;\n\nexport const Text = styled.p`\n   font-size: 24px;\n`;\n\nexport const Title = styled.h3`\n   font-size: 30px;\n`;\n\nexport const AIBox = styled.div`\n   display: flex;\n   align-items: center;\n\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n   display: inline-block;\n   border: 2px solid red;\n   border-style: dashed;\n   padding: 10px;\n   :not(:last-child) {\n      margin-right: 20px;\n   }\n   :hover {\n     scale: 1.2;\n   }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const BackBtn = styled(Link)`\n   border: 2px solid red;  \n   padding: 10px;\n   text-decoration: none;\n   color: black;\n`;","import { Box, FilmCard, Img, MainTitle, Text, Title, StyledLink, AIBox, List, ListItem, BackBtn } from \"./MoviesDetails.styled\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieById } from \"Api\";\nimport { Suspense } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [ movie, setMovie ] = useState([]);\n    const location = useLocation();\n    \n    useEffect(() => {\n        async function getMovie() {\n            try {\n                const result = await getMovieById(movieId);\n                setMovie(result);\n            } catch {\n                toast.error('Ooops! Something went wrong!')\n            }\n        }\n        getMovie();\n    }, [movieId]);\n\n    const { title, poster_path, vote_average, genres, overview } = movie;\n    const percent = (vote_average * 100) / 10;\n    const backHref = location.state?.from ?? '/movies'\n    return (\n        <Box>\n            <BackBtn to={backHref}>Go back</BackBtn>\n            <FilmCard>\n            <Img src={poster_path ? `${BASE_IMG_URL}${poster_path}` : ''} alt=\"Poster card\" />\n            <div>\n              <MainTitle>{title}</MainTitle>\n              <Text><b>User Score: </b>{percent.toFixed()}%</Text>\n              <Title>Overview</Title>\n              <Text>{overview}</Text>\n              <Title>Genres: {''}</Title>\n              <Text>{genres && genres.map(genre => genre.name).join(\", \")}</Text>\n            </div>\n            </FilmCard>\n            <AIBox>\n                <MainTitle>Additional information</MainTitle>\n                <List>\n                    <ListItem><StyledLink to={'cast'}>Cast</StyledLink></ListItem>\n                    <ListItem><StyledLink to={'reviews'}>Reviews</StyledLink></ListItem>\n                </List>\n            </AIBox>\n            <Suspense fallback={<div>Loading...</div>}>\n            <Outlet/>\n            </Suspense>\n            <ToastContainer />\n        </Box>\n    )\n}\n\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","Box","styled","FilmCard","Img","MainTitle","Text","Title","AIBox","List","ListItem","StyledLink","Link","BackBtn","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","result","toast","getMovie","title","poster_path","vote_average","genres","overview","percent","backHref","state","from","to","src","alt","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}