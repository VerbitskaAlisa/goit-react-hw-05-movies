{"version":3,"file":"static/js/387.1a1325df.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,iCAAoEK,EAApE,gCADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKlBG,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,EAAnC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,2BADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,sECvBfO,E,QAAeC,GAAAA,KAAH,quB,SCAZC,EAAS,WAClB,OAAO,SAACF,EAAD,GACV,C,oMCFYG,EAAcF,EAAAA,GAAAA,GAAH,yCAIXG,EAAcH,EAAAA,GAAAA,GAAH,gIASXI,EAASJ,EAAAA,GAAAA,EAAH,mE,SCkCnB,EAxCgB,WACZ,OAAgCK,EAAAA,EAAAA,YAAhC,eAAQC,EAAR,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAEQD,GAAa,GAFrB,UAGkCb,EAAAA,EAAAA,IAAgBU,GAHlD,gBAGgBK,EAHhB,EAGgBA,QACRN,EAAWM,GACXF,GAAa,GALrB,kDAOQG,EAAAA,GAAAA,MAAY,gCAPpB,2DADY,uBAAC,WAAD,wBAWZC,EACH,GAAE,CAACP,KAGA,+BACIF,GAAWA,EAAQU,OAAS,GAC5B,SAACd,EAAD,UACGI,EAAQW,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,QAASvB,EAAQ,EAARA,GAC9B,OACI,UAACO,EAAD,YACI,SAACC,EAAD,UAASc,KACT,uBAAIC,MAFUvB,EAKvB,OACe,iDAErBc,IAAa,SAACT,EAAA,EAAD,KACd,SAAC,KAAD,MAGP,C","sources":["Api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'a24504acc04e1862bdc8e18566b301b1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import styled from \"styled-components\";\n\nexport const StyledLoader = styled.span`\n    display: flex;\n    justify-content: center;\n    position: relative;\n    width: 64px;\n    height: 64px;\n    background-color: transparent;\n    transform: rotate(45deg);\n    overflow: hidden;\n    margin: 0 auto;\n\n  &:after{\n    content: '';\n    position: absolute;\n    inset: 8px;\n    margin: auto;\n    background: #222b32;\n  }\n  &:before{\n    content: '';\n    position: absolute;\n    inset: -15px;\n    margin: auto;\n    background: #de3500;\n    animation: diamondLoader 2s linear infinite;\n  }\n  @keyframes diamondLoader {\n    0%  ,10% {\n      transform: translate(-64px , -64px) rotate(-45deg)\n    }\n    90% , 100% {\n      transform: translate(0px , 0px) rotate(-45deg)\n    }\n  }\n`;","import { StyledLoader } from './Loader.styled'\n\nexport const Loader = () => {\n    return <StyledLoader></StyledLoader>\n}","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n    padding: 0;\n`;\n\nexport const ReviewsCard = styled.li`\n   padding: 20px;\n   border: 2px solid red;\n\n   :not(:last-child) {\n    margin-bottom: 20px;\n   }\n`;\n\nexport const Author = styled.p`\n   font-size: 26px;\n   font-weight: 700;\n`;\n    \n","import { useState } from \"react\"\nimport { getMovieReviews } from \"Api\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Author, ReviewsCard, ReviewsList } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [ reviews, setReviews ] = useState();\n    const { movieId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    \n\n    useEffect(() => {\n        async function getReviews() {\n             try {\n                setIsLoading(true);\n                const { results } = await getMovieReviews(movieId);\n                setReviews(results);\n                setIsLoading(false);\n             } catch {\n                toast.error('Ooops! Something went wrong!')\n             }\n        }\n        getReviews();\n    }, [movieId])\n\n    return (\n        <section>\n           {reviews && reviews.length > 0 ? \n           (<ReviewsList>\n              {reviews.map(({author, content, id}) => {\n                return (\n                    <ReviewsCard key={id}>\n                        <Author>{author}</Author>\n                        <p>{content}</p>\n                    </ReviewsCard>\n                )\n              })}\n           </ReviewsList>) : (<p>Sorry, nothing found.</p>)\n        }\n        {isLoading && <Loader />}\n        <ToastContainer />\n        </section>\n       )\n}\n\nexport default Reviews;"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","StyledLoader","styled","Loader","ReviewsList","ReviewsCard","Author","useState","reviews","setReviews","movieId","useParams","isLoading","setIsLoading","useEffect","results","toast","getReviews","length","map","author","content"],"sourceRoot":""}